<UserControl x:Class="Cryptool.Plugins.ChaChaVisualizationV2.View.ChaChaHash"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Cryptool.Plugins.ChaChaVisualizationV2.View"
             xmlns:conv="clr-namespace:Cryptool.Plugins.ChaChaVisualizationV2.Helper.Converter"
             mc:Ignorable="d"
             Background="White"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Styles\Index.xaml" />
                <ResourceDictionary Source="..\ContentTemplate\PageContentTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <conv:UInt32ToHex x:Key="UInt32ToHex" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
            <conv:BooleanOr x:Key="BooleanOr" />
        </ResourceDictionary>
    </UserControl.Resources>
    <ContentControl Template="{StaticResource PageContentTemplate}" Name="Root">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50*" />
                <RowDefinition Height="50*" />
                <RowDefinition Height="8*" />
            </Grid.RowDefinitions>

            <!-- #region Top Row -->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!--#region State Matrix -->
                <Border Style="{StaticResource MatrixBorder}" Grid.Row="0" Grid.Column="0">
                    <Grid Grid.Row="0" Grid.Column="0" Name="StateMatrix">
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StateText}" />
                            <Style TargetType="{x:Type Viewbox}" BasedOn="{StaticResource StateViewbox}" />
                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}" />
                            <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource DiffusionState}" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[0].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[0].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState0" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[1].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[1].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState1" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[2].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[2].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState2" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[3].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[3].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState3" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="1" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[4].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[4].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState4" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[5].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[5].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState5" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[6].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[6].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState6" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[7].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[7].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState7" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="2" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[8].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[8].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState8" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[9].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[9].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState9" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[10].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[10].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState10" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[11].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[11].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState11" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="3" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[12].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[12].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState12" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[13].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[13].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState13" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[14].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[14].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState14" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[15].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[15].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionState15" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                    </Grid>
                </Border>
                <!--#endregion-->

                <!--#region Description -->
                <Grid Grid.Column="1" Grid.ColumnSpan="2"  Name="DescriptionRoot">
                    <Viewbox Style="{StaticResource UniformViewbox}">
                        <Viewbox.Resources>
                            <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource RichText}">
                                <Setter Property="Margin" Value="3" />
                                <Setter Property="Width" Value="{Binding ElementName=DescriptionRoot, Path=ActualWidth}" />
                            </Style>
                        </Viewbox.Resources>
                        <StackPanel Orientation="Vertical">
                            <RichTextBox Visibility="{Binding Description[0], Converter={StaticResource FalseToCollapsed}}">
                                <FlowDocument>
                                    <Paragraph>
                                        To generate a keystream block, we apply the ChaCha hash function to the state. The ChaCha hash function consists of
                                        <Run Text="{Binding ChaCha.Rounds, FallbackValue=X}" /> rounds.
                                        <LineBreak />
                                        During each round, we run the quarterround function four times (hence the name
                                        <Italic>quarterround</Italic> ) which modifies four state entries. This means that after each round, the whole state has been modified.
                                        <LineBreak />
                                        In an even round (round 0, 2, 4, ...), we go through all columns thus the even rounds can also be called
                                        <Italic>column rounds</Italic> ,
                                    whereas in an uneven round (round 1, 3, 5, ...), we go through all diagonals thus the uneven rounds can be called
                                        <Italic>diagonal rounds</Italic> .
                                    </Paragraph>
                                </FlowDocument>
                            </RichTextBox>
                            <RichTextBox Visibility="{Binding Description[1], Converter={StaticResource FalseToCollapsed}}">
                                <FlowDocument>
                                    <Paragraph>
                                        At the left, you can see the current state. At the bottom, you see the visualization of the quarterround function. It consists of four steps where each step modifies three values using addition modulo 2
                                        <Run Typography.Variants="Superscript">32</Run> , XOR and a circular left shift.
                                    </Paragraph>
                                </FlowDocument>
                            </RichTextBox>
                        </StackPanel>
                    </Viewbox>
                </Grid>

                <!--#endregion Description -->
            </Grid>
            <!--#endregion-->

            <!-- #region Middle row -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <!-- #region  Quarterround visualization -->
                <Grid Grid.ColumnSpan="3" Margin="0,5,0,5" Visibility="Collapsed">
                    <Viewbox Style="{StaticResource UniformViewbox}">
                        <Viewbox.Resources>
                            <Style x:Key="QRValue" TargetType="{x:Type TextBox}" BasedOn="{StaticResource StateText}" />
                            <Style x:Key="QRDiffusionValue" TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource DiffusionState}" />
                            <Style TargetType="{x:Type StackPanel}">
                                <Setter Property="Orientation" Value="Vertical" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style x:Key="QRValueBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                <Setter Property="Width" Value="65" />
                                <Setter Property="Height" Value="40" />
                            </Style>
                            <Style x:Key="QRValueRectangle" TargetType="{x:Type Rectangle}">
                                <Setter Property="Width" Value="65" />
                                <Setter Property="Height" Value="40" />
                                <Setter Property="Fill" Value="White" />
                            </Style>
                            <Style x:Key="QRStepRectangle" TargetType="{x:Type Rectangle}">
                                <Setter Property="Width" Value="300" />
                                <Setter Property="Height" Value="260" />
                                <Setter Property="StrokeThickness" Value="1" />
                                <Setter Property="Stroke" Value="Black" />
                            </Style>
                            <Style x:Key="AddLabel" TargetType="{x:Type Label}">
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="FontSize" Value="18" />
                                <Setter Property="Content" Value="+" />
                            </Style>
                            <Style x:Key="XORLabel" TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                <Setter Property="Width" Value="20" />
                                <Setter Property="Height" Value="15" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontSize" Value="8" />
                                <Setter Property="TextAlignment" Value="Center" />
                                <Setter Property="Text" Value="XOR" />
                            </Style>
                            <Style x:Key="ShiftLabel" TargetType="{x:Type TextBlock}">
                                <Setter Property="Width" Value="20" />
                                <Setter Property="Height" Value="20" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontSize" Value="8" />
                                <Setter Property="TextAlignment" Value="Center" />
                                <Setter Property="Text" Value="&lt;&lt;&lt;" />
                            </Style>
                            <Style x:Key="ShiftSubscript" TargetType="{x:Type TextBlock}">
                                <Setter Property="FontSize" Value="8" />
                            </Style>
                            <Style TargetType="{x:Type Viewbox}" BasedOn="{StaticResource UniformViewbox}" />
                        </Viewbox.Resources>
                        <Canvas Width="1500" Height="260">
                            <Canvas Canvas.Top="20">
                                <!-- Input cells -->
                                <Border Canvas.Left="00" Canvas.Top="0" Name="QRInABorder">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                            <Binding Path="QRInA.Mark" />
                                                            <Binding Path="QRStep[0].Add.MarkInput" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRInA.Value, Converter={StaticResource UInt32ToHex}}" />
                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRInADiffusion" />
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="00" Canvas.Top="60" Name="QRInBBorder">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                            <Binding Path="QRInB.Mark" />
                                                            <Binding Path="QRStep[1].XOR.MarkInput" />
                                                            <Binding Path="QRStep[0].Add.MarkInput" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRInB.Value, Converter={StaticResource UInt32ToHex}}" />
                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRInBDiffusion" />
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="00" Canvas.Top="120" Name="QRInCBorder">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                            <Binding Path="QRInC.Mark" />
                                                            <Binding Path="QRStep[1].Add.MarkInput" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRInC.Value, Converter={StaticResource UInt32ToHex}}" />
                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRInCDiffusion" />
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="00" Canvas.Top="180" Name="QRInDBorder">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                            <Binding Path="QRInD.Mark" />
                                                            <Binding Path="QRStep[0].XOR.MarkInput" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRInD.Value, Converter={StaticResource UInt32ToHex}}" />
                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRInDDiffusion" />
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <!-- Output cells -->
                                <Border Canvas.Left="1435" Canvas.Top="0">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutA.Mark}" Value="True">
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QROutA.Value, Converter={StaticResource UInt32ToHex}}" />
                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QROutADiffusion" />
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="1435" Canvas.Top="60">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutB.Mark}" Value="True">
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QROutB.Value, Converter={StaticResource UInt32ToHex}}" />
                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QROutBDiffusion" />
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="1435" Canvas.Top="120">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutC.Mark}" Value="True">
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QROutC.Value, Converter={StaticResource UInt32ToHex}}" />
                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QROutCDiffusion" />
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="1435" Canvas.Top="180">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutD.Mark}" Value="True">
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QROutD.Value, Converter={StaticResource UInt32ToHex}}" />
                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QROutDDiffusion" />
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <!-- General paths (unnamed) -->
                                <Path Data="M 0,20 h 1370" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInABorder, Path=(Canvas.Top)}" />
                                <Path Data="M 0,20 h 139 c 0 -10 20 -10 20 0 h 648 c 0 -10 20 -10 20 0 H 1370" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}" />
                                <Path Data="M 0,20 h 55" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}" />
                                <Path Data="M 0,20 h 139 c 0 -10 20 -10 20 0 h 648 c 0 -10 20 -10 20 0 H 1370" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInCBorder, Path=(Canvas.Top)}" />
                                <Path Data="M 0,20 h 1370" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}" />
                                <!-- Input paths (named) -->
                                <!-- First box -->
                                <Path Data="M 0,20 h 50 m 4,0 v 60 h -55 M 60,20 h 20" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInABorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[0].Add.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 0,20 h 140 m 9,-10 v -170 h -10 M 159,20 h 5" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[0].XOR.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 229,20 h 5 m 20,0 h 5" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[0].Shift.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <!-- Second box -->
                                <Path Data="M 0,20 h 139 c 0 -10 20 -10 20 0 h 220 m 19,0 h 9 m -19, 0 v 60 h -64" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInCBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[1].Add.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 0,20 h 139 c 0 -10 20 -10 20 0 h 314 m 19,0 h 6 m -15,10 v 50 h -10" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[1].XOR.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 563,20 h 5 m 20,0 h 5" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[1].Shift.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <!-- Third box -->
                                <Path Data="M -529,20 H 50 m 4,0 v 60 h -65 M 60,20 h 20" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInABorder, Path=(Canvas.Top)}" Panel.ZIndex="0">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[2].Add.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M -344,20 H 140 m 9,-10 v -170 h -10 M 159,20 h 5" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[2].XOR.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 229,20 h 5 m 20,0 h 5" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[2].Shift.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <!-- Fourth box -->
                                <Path Data="M -195,20 H 139 c 0 -10 20 -10 20 0 h 220 m 19,0 h 9 m -19, 0 v 60 h -64" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInCBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[3].Add.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path  Data="M -10,20 H 139 c 0 -10 20 -10 20 0 h 314 m 19,0 h 6 m -15,10 v 50 h -10" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[3].XOR.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 563,20 h 5 m 20,0 h 5" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[3].Shift.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <!-- Output paths -->
                                <Path Data="M 0,20 h 563" Canvas.Left="872" Canvas.Top="{ Binding ElementName=QRInABorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutA.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 0,20 h 44" Canvas.Left="1391" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutB.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 0,20 h 229" Canvas.Left="1206" Canvas.Top="{ Binding ElementName=QRInCBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutC.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 0,20 h 378" Canvas.Left="1057" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutD.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <!-- Grid for qr detail boxes -->
                                <Grid Canvas.Left="65" Width="1370" Height="260" Canvas.Top="-20">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.0248*" />
                                        <!--  34/1370 = 0.0248 -->
                                        <ColumnDefinition Width="0.2189*" />
                                        <!-- 300/1370 = 0.2189 -->
                                        <ColumnDefinition Width="0.0248*" />
                                        <ColumnDefinition Width="0.2189*" />
                                        <ColumnDefinition Width="0.0248*" />
                                        <ColumnDefinition Width="0.2189*" />
                                        <ColumnDefinition Width="0.0248*" />
                                        <ColumnDefinition Width="0.2189*" />
                                        <ColumnDefinition Width="0.0248*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Canvas Grid.Column="1" Grid.RowSpan="4">
                                        <Rectangle Style="{StaticResource QRStepRectangle}" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="75" />
                                                <!-- Width: 300/4 = 75 -->
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="60" />
                                                <!-- Height: 260/4 = 65-->
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="10" />
                                            </Grid.RowDefinitions>
                                            <Canvas Grid.Row="1" Grid.Column="0">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="40" />
                                                <Border Canvas.Top="10" Canvas.Left="40">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[0].Add.Mark" />
                                                                            <Binding Path="QRStep[0].XOR.MarkInput" />
                                                                            <Binding Path="QRStep[2].Add.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[0].Add.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusion_0" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRAddCircle_0">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource AddCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[0].Add.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Label Canvas.Top="11" Canvas.Left="10" Style="{StaticResource AddLabel}" Foreground="{ Binding ElementName=QRAddCircle_0, Path=Stroke}" />
                                            </Canvas>
                                            <Canvas Grid.Row="4" Grid.Column="1">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="55" />
                                                <Border Canvas.Top="10" Canvas.Left="55">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[0].XOR.Mark" />
                                                                            <Binding Path="QRStep[0].Shift.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[0].XOR.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusion_0" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <TextBox Canvas.Left="30" Canvas.Top="24" Style="{StaticResource XORLabel}" Foreground="{ Binding ElementName=QRXORCircle_0, Path=Stroke}" />
                                                <Path Name="QRXORCircle_0">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource XORCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[0].XOR.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                            </Canvas>
                                            <Canvas Grid.Row="1" Grid.Column="1">
                                                <Path Canvas.Left="30" Data="M 10,30 v 170" />
                                            </Canvas>
                                            <Canvas Grid.Row="4" Grid.Column="2">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="75" />
                                                <Border Canvas.Top="10" Canvas.Left="75">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[0].Shift.Mark" />
                                                                            <Binding Path="QRStep[1].Add.MarkInput" />
                                                                            <Binding Path="QRStep[2].XOR.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[0].Shift.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusion_0" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRShiftCircle_0">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource ShiftCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[0].Shift.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <TextBlock Canvas.Top="24" Canvas.Left="50" Style="{StaticResource ShiftLabel}" Foreground="{ Binding ElementName=QRShiftCircle_0, Path=Stroke}" />
                                                <TextBlock Canvas.Top="39" Canvas.Left="64" Style="{StaticResource ShiftSubscript}" Text="16" Foreground="{ Binding ElementName=QRShiftCircle_0, Path=Stroke}" />
                                            </Canvas>
                                        </Grid>
                                    </Canvas>
                                    <Canvas Grid.Column="3" Grid.RowSpan="4">
                                        <Rectangle Style="{StaticResource QRStepRectangle}" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="75" />
                                                <!-- Width: 300/4 = 75 -->
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="60" />
                                                <!-- Height: 260/4 = 65-->
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="10" />
                                            </Grid.RowDefinitions>
                                            <Canvas Grid.Row="3" Grid.Column="0">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="40" />
                                                <Border Canvas.Top="10" Canvas.Left="40">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[1].Add.Mark" />
                                                                            <Binding Path="QRStep[1].XOR.MarkInput" />
                                                                            <Binding Path="QRStep[3].Add.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[1].Add.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusion_1" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRAddCircle_1">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource AddCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[1].Add.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Label Canvas.Top="11" Canvas.Left="10" Style="{StaticResource AddLabel}" Foreground="{ Binding ElementName=QRAddCircle_1, Path=Stroke}" />
                                                <Path Data="M 20,40 v 50" />
                                            </Canvas>
                                            <Canvas Grid.Row="2" Grid.Column="1">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="55" />
                                                <Border Canvas.Top="10" Canvas.Left="55">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[1].XOR.Mark" />
                                                                            <Binding Path="QRStep[1].Shift.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[1].XOR.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusion_1" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <TextBox Canvas.Left="30" Canvas.Top="24" Style="{StaticResource XORLabel}" Foreground="{ Binding ElementName=QRXORCircle_0, Path=Stroke}" />
                                                <Path Name="QRXORCircle_1">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource XORCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[1].XOR.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Path Data="M 40,40 v 50" />
                                            </Canvas>
                                            <Canvas Grid.Row="2" Grid.Column="2">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="75" />
                                                <Border Canvas.Top="10" Canvas.Left="75">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[1].Shift.Mark" />
                                                                            <Binding Path="QRStep[2].Add.MarkInput" />
                                                                            <Binding Path="QRStep[3].XOR.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[1].Shift.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusion_1" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRShiftCircle_1">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource ShiftCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[1].Shift.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <TextBlock Canvas.Top="24" Canvas.Left="50" Style="{StaticResource ShiftLabel}" Foreground="{ Binding ElementName=QRShiftCircle_1, Path=Stroke}" />
                                                <TextBlock Canvas.Top="39" Canvas.Left="64" Style="{StaticResource ShiftSubscript}" Text="12" Foreground="{ Binding ElementName=QRShiftCircle_1, Path=Stroke}" />
                                            </Canvas>
                                        </Grid>
                                    </Canvas>
                                    <Canvas Grid.Column="5" Grid.RowSpan="4">
                                        <Rectangle Style="{StaticResource QRStepRectangle}" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="75" />
                                                <!-- Width: 300/4 = 75 -->
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="60" />
                                                <!-- Height: 260/4 = 65-->
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="10" />
                                            </Grid.RowDefinitions>
                                            <Canvas Grid.Row="1" Grid.Column="0">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="40" />
                                                <Border Canvas.Top="10" Canvas.Left="40">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[2].Add.Mark" />
                                                                            <Binding Path="QROutA.MarkInput" />
                                                                            <Binding Path="QRStep[2].XOR.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[2].Add.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusion_2" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRAddCircle_2">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource AddCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[2].Add.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Label Canvas.Top="11" Canvas.Left="10" Style="{StaticResource AddLabel}" Foreground="{ Binding ElementName=QRAddCircle_2, Path=Stroke}" />
                                                <Path Data="M 20,40 v 50" />
                                            </Canvas>
                                            <Canvas Grid.Row="4" Grid.Column="1">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="55" />
                                                <Border Canvas.Top="10" Canvas.Left="55">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[2].XOR.Mark" />
                                                                            <Binding Path="QRStep[2].Shift.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[2].XOR.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusion_2" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <TextBox Canvas.Left="30" Canvas.Top="24" Style="{StaticResource XORLabel}" Foreground="{ Binding ElementName=QRXORCircle_2, Path=Stroke}" />
                                                <Path Name="QRXORCircle_2">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource XORCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[2].XOR.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                            </Canvas>
                                            <Canvas Grid.Row="1" Grid.Column="1">
                                                <Path Canvas.Left="30" Data="M 10,30 v 170" />
                                            </Canvas>
                                            <Canvas Grid.Row="4" Grid.Column="2">
                                                <Rectangle Style="{StaticResource QRValueRectangle}"  Canvas.Top="10" Canvas.Left="75" />
                                                <Border Canvas.Top="10" Canvas.Left="75">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[2].Shift.Mark" />
                                                                            <Binding Path="QRStep[3].Add.MarkInput" />
                                                                            <Binding Path="QROutD.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[2].Shift.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusion_2" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRShiftCircle_2">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource ShiftCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[2].Shift.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <TextBlock Canvas.Top="24" Canvas.Left="50" Style="{StaticResource ShiftLabel}" Foreground="{ Binding ElementName=QRShiftCircle_2, Path=Stroke}" />
                                                <TextBlock Canvas.Top="39" Canvas.Left="66" Style="{StaticResource ShiftSubscript}" Text="8" Foreground="{ Binding ElementName=QRShiftCircle_2, Path=Stroke}" />
                                            </Canvas>
                                        </Grid>
                                    </Canvas>
                                    <Canvas Grid.Column="7" Grid.RowSpan="4">
                                        <Rectangle Style="{StaticResource QRStepRectangle}" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="75" />
                                                <!-- Width: 300/4 = 75 -->
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="60" />
                                                <!-- Height: 260/4 = 65-->
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="10" />
                                            </Grid.RowDefinitions>
                                            <Canvas Grid.Row="3" Grid.Column="0">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="40" />
                                                <Border Canvas.Top="10" Canvas.Left="40">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[3].Add.Mark" />
                                                                            <Binding Path="QROutC.MarkInput" />
                                                                            <Binding Path="QRStep[3].XOR.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[3].Add.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusion_3" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRAddCircle_3">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource AddCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[3].Add.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Label Canvas.Top="11" Canvas.Left="10"  Style="{StaticResource AddLabel}" Foreground="{ Binding ElementName=QRAddCircle_3, Path=Stroke}" />
                                                <Path Data="M 20,40 v 50" />
                                            </Canvas>
                                            <Canvas Grid.Row="2" Grid.Column="1">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="55" />
                                                <Border Canvas.Top="10" Canvas.Left="55">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[3].XOR.Mark" />
                                                                            <Binding Path="QRStep[3].Shift.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[3].XOR.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusion_3" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <TextBox Canvas.Left="30" Canvas.Top="24" Style="{StaticResource XORLabel}" Foreground="{ Binding ElementName=QRXORCircle_3, Path=Stroke}" />
                                                <Path Name="QRXORCircle_3">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource XORCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[3].XOR.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Path Data="M 40,40 v 50" />
                                            </Canvas>
                                            <Canvas Grid.Row="2" Grid.Column="2">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="75" />
                                                <Border Canvas.Top="10" Canvas.Left="75">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[3].Shift.Mark" />
                                                                            <Binding Path="QROutB.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[3].Shift.Value, Converter={StaticResource UInt32ToHex}}" />
                                                            <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusion_3" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRShiftCircle_3">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource ShiftCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[3].Shift.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <TextBlock Canvas.Top="24" Canvas.Left="50" Style="{StaticResource ShiftLabel}" Foreground="{ Binding ElementName=QRShiftCircle_3, Path=Stroke}" />
                                                <TextBlock Canvas.Top="39" Canvas.Left="66" Style="{StaticResource ShiftSubscript}" Text="7" Foreground="{ Binding ElementName=QRShiftCircle_3, Path=Stroke}" />
                                            </Canvas>
                                        </Grid>
                                    </Canvas>
                                </Grid>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </Grid>
                <!-- #endregion -->

                <!-- #region Addition + Little endian -->

                <Border Style="{StaticResource MatrixBorder}" Grid.Row="0" Grid.Column="0">
                    <Grid Name="AdditionMatrix">
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StateText}" />
                            <Style TargetType="{x:Type Viewbox}" BasedOn="{StaticResource StateViewbox}" />
                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}" />
                            <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource DiffusionState}" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[0].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[0].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState0" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[1].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[1].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState1" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[2].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[2].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState2" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[3].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[3].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState3" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="1" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[4].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[4].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState4" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[5].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[5].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState5" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[6].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[6].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState6" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[7].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[7].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState7" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="2" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[8].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[8].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState8" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[9].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[9].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState9" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[10].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[10].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState10" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[11].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[11].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState11" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="3" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[12].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[12].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState12" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[13].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[13].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState13" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[14].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[14].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState14" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[15].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[15].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionState15" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                    </Grid>
                </Border>

                <Border Style="{StaticResource MatrixBorder}" Grid.Row="0" Grid.Column="1">
                    <Grid Name="AdditionResultMatrix">
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StateText}" />
                            <Style TargetType="{x:Type Viewbox}" BasedOn="{StaticResource StateViewbox}" />
                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}" />
                            <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource DiffusionState}" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[0].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[0].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState0" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[1].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[1].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState1" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[2].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[2].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState2" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[3].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[3].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState3" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="1" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[4].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[4].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState4" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[5].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[5].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState5" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[6].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[6].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState6" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[7].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[7].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState7" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="2" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[8].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[8].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState8" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[9].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[9].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState9" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[10].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[10].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState10" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[11].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[11].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState11" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="3" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[12].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[12].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState12" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[13].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[13].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState13" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[14].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[14].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState14" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[15].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[15].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionAdditionResultState15" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                    </Grid>
                </Border>

                <Border Style="{StaticResource MatrixBorder}" Grid.Row="0" Grid.Column="2">
                    <Grid Name="LittleEndianMatrix">
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StateText}" />
                            <Style TargetType="{x:Type Viewbox}" BasedOn="{StaticResource StateViewbox}" />
                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}" />
                            <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource DiffusionState}" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[0].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[0].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState0" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[1].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[1].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState1" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[2].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[2].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState2" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[3].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[3].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState3" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="1" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[4].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[4].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState4" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[5].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[5].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState5" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[6].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[6].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState6" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[7].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[7].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState7" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="2" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[8].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[8].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState8" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[9].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[9].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState9" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[10].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[10].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState10" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[11].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[11].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState11" />
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="3" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[12].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[12].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState12" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[13].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[13].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState13" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[14].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[14].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState14" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[15].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <TextBox Text="{Binding StateValues[15].Value, Converter={StaticResource UInt32ToHex}}" />
                                    <RichTextBox Name="DiffusionLittleEndianState15" />
                                </StackPanel>
                            </Viewbox>
                        </Border>
                    </Grid>
                </Border>

                <Grid Grid.ColumnSpan="2">
                    <Viewbox Style="{StaticResource UniformViewbox}">
                        <Canvas Width="1500" Height="260">
                            <Path Data="M 690,132 h 120 h -60 v -553 h -60" Stroke="Black" StrokeThickness="5" />
                            <Path Data="M 1443,132 h 120" Stroke="Black" StrokeThickness="5" />
                        </Canvas>
                    </Viewbox>
                </Grid>
                <!--#endregion-->
            </Grid>

            <!--#endregion -->

            <!--#region Button navigation -->

            <Viewbox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Left">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Orientation" Value="Horizontal" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Margin" Value="5,0,5,0" />
                        </Style>
                        <Style TargetType="{x:Type TextBox}" x:Key="Label" BasedOn="{StaticResource Text}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type TextBox}" x:Key="Input" BasedOn="{StaticResource Input}">
                            <Setter Property="Width" Value="40" />
                        </Style>
                        <Style TargetType="{x:Type TextBox}" x:Key="ColumnLabel" BasedOn="{StaticResource Label}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Visibility">
                                <Setter.Value>
                                    <Binding Path="CurrentRoundIndex">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:IsEven />
                                                <BooleanToVisibilityConverter />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type Button}" x:Key="ColumnQRButton">
                            <Setter Property="Width" Value="45" />
                            <Setter Property="Height" Value="25" />
                            <Setter Property="Margin" Value="3" />
                            <Setter Property="Visibility">
                                <Setter.Value>
                                    <Binding Path="CurrentRoundIndex">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:IsEven />
                                                <BooleanToVisibilityConverter />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type TextBox}" x:Key="DiagonalLabel" BasedOn="{StaticResource Label}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Visibility">
                                <Setter.Value>
                                    <Binding Path="CurrentRoundIndex">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:IsEven Inverted="True" />
                                                <BooleanToVisibilityConverter />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type Button}" x:Key="DiagonalQRButton">
                            <Setter Property="Width" Value="45" />
                            <Setter Property="Height" Value="25" />
                            <Setter Property="Margin" Value="3" />
                            <Setter Property="Visibility">
                                <Setter.Value>
                                    <Binding Path="CurrentRoundIndex">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:IsEven Inverted="True" />
                                                <BooleanToVisibilityConverter />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Grid.Resources>

                    <TextBox Grid.Column="0" Grid.Row="0" Style="{StaticResource Label}" Text="Keystream Block" Margin="3,0,3,0" />
                    <StackPanel Grid.Column="0" Grid.Row="1">
                        <Button Style="{StaticResource PrevButton}" Command="{Binding PrevKeystreamBlockCommand}" />
                        <TextBox Name="KeystreamBlockInput" Style="{StaticResource Input}" />
                        <TextBox Style="{StaticResource Text}" Text="/" />
                        <TextBox Style="{StaticResource Text}" Text="{Binding ChaChaVisualization.TotalKeystreamBlocks, Mode=OneWay}" />
                        <Button Style="{StaticResource NextButton}" Command="{Binding NextKeystreamBlockCommand}" />
                    </StackPanel>
                    <TextBox Grid.Column="1" Grid.Row="0" Style="{StaticResource Label}" Text="Round" />
                    <StackPanel Grid.Column="1" Grid.Row="1">
                        <Button Style="{StaticResource PrevButton}" Command="{Binding PrevRoundCommand}" />
                        <TextBox Name="RoundInput" Style="{StaticResource Input}" />
                        <TextBox Style="{StaticResource Text}" Text="/" />
                        <TextBox Style="{StaticResource Text}" Text="{Binding Settings.Rounds, Mode=OneWay}" />
                        <Button Style="{StaticResource NextButton}" Command="{Binding NextRoundCommand}" />
                    </StackPanel>
                    <TextBox Grid.Column="2" Grid.Row="0" Style="{StaticResource Label}" Text="Quarterround" />
                    <StackPanel Grid.Column="2" Grid.Row="1">
                        <Button Style="{StaticResource PrevButton}" Command="{Binding PrevQRCommand}" />
                        <TextBox Name="QRInput" Style="{StaticResource Input}" />
                        <TextBox Style="{StaticResource Text}" Text="/" />
                        <TextBox Style="{StaticResource Text}" Text="4" />
                        <Button Style="{StaticResource NextButton}" Command="{Binding NextQRCommand}" />
                    </StackPanel>

                    <!--#region column rounds -->
                    <TextBox Grid.Column="3" Grid.Row="0" Style="{StaticResource Label}" Text="Columnround (0,4,8,12)" />
                    <StackPanel Grid.Column="3" Grid.Row="1">
                        <Button Style="{StaticResource ColumnQRButton}" Content="Start" Command="{Binding QuarterroundStartCommand}" CommandParameter="0" />
                        <Button Style="{StaticResource ColumnQRButton}" Content="End" Command="{Binding QuarterroundEndCommand}" CommandParameter="0" />
                    </StackPanel>
                    <TextBox Grid.Column="4" Grid.Row="0" Style="{StaticResource Label}" Text="Columnround (1,5,9,13)" />
                    <StackPanel Grid.Column="4" Grid.Row="1">
                        <TextBox Style="{StaticResource ColumnLabel}" Text="" />
                        <Button Style="{StaticResource ColumnQRButton}" Content="Start" Command="{Binding QuarterroundStartCommand}" CommandParameter="1" />
                        <Button Style="{StaticResource ColumnQRButton}" Content="End" Command="{Binding QuarterroundEndCommand}" CommandParameter="1" />
                    </StackPanel>
                    <TextBox Grid.Column="5" Grid.Row="0" Style="{StaticResource Label}" Text="Columnround (2,6,10,14)" />
                    <StackPanel Grid.Column="5" Grid.Row="1">
                        <Button Style="{StaticResource ColumnQRButton}" Content="Start" Command="{Binding QuarterroundStartCommand}" CommandParameter="2" />
                        <Button Style="{StaticResource ColumnQRButton}" Content="End" Command="{Binding QuarterroundEndCommand}" CommandParameter="2" />
                    </StackPanel>
                    <TextBox Grid.Column="6" Grid.Row="0" Style="{StaticResource Label}" Text="Columnround (3,7,11,15)" />
                    <StackPanel Grid.Column="6" Grid.Row="1">
                        <Button Style="{StaticResource ColumnQRButton}" Content="Start" Command="{Binding QuarterroundStartCommand}" CommandParameter="3" />
                        <Button Style="{StaticResource ColumnQRButton}" Content="End" Command="{Binding QuarterroundEndCommand}" CommandParameter="3" />
                    </StackPanel>

                    <!--#endregion-->

                    <!--#region  diagonal rounds -->

                    <TextBox Grid.Column="3" Grid.Row="0" Style="{StaticResource DiagonalLabel}" Text="Diagonalround (1,5,10,15)" />
                    <StackPanel Grid.Column="3" Grid.Row="1">
                        <Button Style="{StaticResource DiagonalQRButton}" Content="Start" Command="{Binding QuarterroundStartCommand}" CommandParameter="0" />
                        <Button Style="{StaticResource DiagonalQRButton}" Content="End" Command="{Binding QuarterroundEndCommand}" CommandParameter="0" />
                    </StackPanel>
                    <TextBox Grid.Column="4" Grid.Row="0" Style="{StaticResource DiagonalLabel}" Text="Diagonalround (1,6,11,12)" />
                    <StackPanel Grid.Column="4" Grid.Row="1">
                        <Button Style="{StaticResource DiagonalQRButton}" Content="Start" Command="{Binding QuarterroundStartCommand}" CommandParameter="1" />
                        <Button Style="{StaticResource DiagonalQRButton}" Content="End" Command="{Binding QuarterroundEndCommand}" CommandParameter="1" />
                    </StackPanel>
                    <TextBox Grid.Column="5" Grid.Row="0" Style="{StaticResource DiagonalLabel}" Text="Diagonalround (2,7,8,13)" />
                    <StackPanel Grid.Column="5" Grid.Row="1">
                        <Button Style="{StaticResource DiagonalQRButton}" Content="Start" Command="{Binding QuarterroundStartCommand}" CommandParameter="2" />
                        <Button Style="{StaticResource DiagonalQRButton}" Content="End" Command="{Binding QuarterroundEndCommand}" CommandParameter="2" />
                    </StackPanel>
                    <TextBox Grid.Column="6" Grid.Row="0" Style="{StaticResource DiagonalLabel}" Text="Diagonalround (3,4,9,14)" />
                    <StackPanel Grid.Column="6" Grid.Row="1">
                        <Button Style="{StaticResource DiagonalQRButton}" Content="Start" Command="{Binding QuarterroundStartCommand}" CommandParameter="3" />
                        <Button Style="{StaticResource DiagonalQRButton}" Content="End" Command="{Binding QuarterroundEndCommand}" CommandParameter="3" />
                    </StackPanel>

                    <!--#endregion-->
                </Grid>
            </Viewbox>

            <!--#endregion-->
        </Grid>
    </ContentControl>
</UserControl>