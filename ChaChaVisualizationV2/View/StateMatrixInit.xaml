<UserControl x:Class="Cryptool.Plugins.ChaChaVisualizationV2.View.StateMatrixInit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Cryptool.Plugins.ChaChaVisualizationV2.View"
             xmlns:conv="clr-namespace:Cryptool.Plugins.ChaChaVisualizationV2.Helper.Converter"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Styles\Viewbox.xaml" />
                <ResourceDictionary Source="..\Styles\TextBox.xaml" />
                <ResourceDictionary Source="..\Styles\RichTextBox.xaml" />
                <ResourceDictionary Source="..\Styles\Border.xaml" />
                <ResourceDictionary Source="..\Styles\Button.xaml" />
                <ResourceDictionary Source="..\ContentTemplate\PageContentTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="stateText" TargetType="TextBox" BasedOn="{StaticResource Hex}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="stateViewbox" TargetType="Viewbox" BasedOn="{StaticResource UniformViewbox}">
                <Setter Property="Margin" Value="1" />
            </Style>
            <BooleanToVisibilityConverter x:Key="FalseToCollapsed" />
            <conv:BitsToBytes x:Key="BitsToBytes" />
        </ResourceDictionary>
    </UserControl.Resources>
    <ContentControl Template="{StaticResource PageContentTemplate}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border Style="{StaticResource stateBorder}" Grid.Row="0" Grid.Column="0">
                <Grid Grid.Row="0" Grid.Column="0" Name="StateMatrix">
                    <Grid.Resources>
                        <Style TargetType="TextBox" BasedOn="{StaticResource stateText}" />
                        <Style TargetType="Viewbox" BasedOn="{StaticResource stateViewbox}" />
                        <Style TargetType="Border" BasedOn="{StaticResource stateBorder}" />
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="0" Grid.Column="0">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[0].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="1">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[1].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="2">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[2].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="3">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[3].Value}" />
                        </Viewbox>
                    </Border>

                    <Border Grid.Row="1" Grid.Column="0">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[4].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="1" Grid.Column="1">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[5].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="1" Grid.Column="2">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[6].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="1" Grid.Column="3">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[7].Value}" />
                        </Viewbox>
                    </Border>

                    <Border Grid.Row="2" Grid.Column="0">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[8].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="1">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[9].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="2">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[10].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="3">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[11].Value}" />
                        </Viewbox>
                    </Border>

                    <Border Grid.Row="3" Grid.Column="0">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[12].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="3" Grid.Column="1">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[13].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="3" Grid.Column="2">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[14].Value}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="3" Grid.Column="3">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[15].Value}" />
                        </Viewbox>
                    </Border>
                </Grid>
            </Border>
            <Grid Grid.Row="0" Grid.Column="1" Name="DescriptionRoot">
                <Viewbox Style="{StaticResource UniformViewbox}">
                    <Viewbox.Resources>
                        <Style TargetType="RichTextBox" BasedOn="{StaticResource RichText}">
                            <Setter Property="Margin" Value="3" />
                        </Style>
                    </Viewbox.Resources>
                    <StackPanel Orientation="Vertical">
                        <RichTextBox Width="{Binding ElementName=DescriptionRoot, Path=ActualWidth}" Visibility="{Binding Description[0], Converter={StaticResource FalseToCollapsed}}">
                            <FlowDocument>
                                <Paragraph>
                                    The 512-bit (128-byte) ChaCha state can be interpreted as a 4x4 matrix, where each entry consists of 4 bytes. The state entries consist of the parameters you can see below. They will be encoded before insertion into the state matrix.
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <RichTextBox Width="{Binding ElementName=DescriptionRoot, Path=ActualWidth}" Visibility="{Binding Description[1], Converter={StaticResource FalseToCollapsed}}">
                            <FlowDocument>
                                <Paragraph>
                                    The first 16 bytes consist of the constants.
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <RichTextBox Width="{Binding ElementName=DescriptionRoot, Path=ActualWidth}" Visibility="{Binding Description[2], Converter={StaticResource FalseToCollapsed}}">
                            <FlowDocument>
                                <Paragraph>
                                    The next 32 bytes consist of the key. If the key consists of only 16 bytes, it is concatenated with itself.
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <RichTextBox Width="{Binding ElementName=DescriptionRoot, Path=ActualWidth}" Visibility="{Binding Description[3], Converter={StaticResource FalseToCollapsed}}">
                            <FlowDocument>
                                <Paragraph>
                                    The next
                                    <Run Text="{Binding Settings.Version.CounterBits, Converter={StaticResource BitsToBytes}, Mode=OneWay}" /> bytes consist of the counter. The counter is special since we first reverse all bytes. This is so because all other parameters are assumed to be already in little-endian thus no reversing needed.
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </StackPanel>
                </Viewbox>
            </Grid>
        </Grid>
    </ContentControl>
</UserControl>