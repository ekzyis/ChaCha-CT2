<UserControl x:Class="Cryptool.Plugins.ChaCha.ChaChaPresentation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Cryptool.Plugins.ChaCha"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="White">
  <!-- Main grid with 2 rows. One big row row for content pane and one small row for navigation bar at bottom -->
  <UserControl.Resources>
    <Style TargetType="TextBlock">
      <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="95*"></RowDefinition> <!-- Content row -->
      <RowDefinition Height="5*"></RowDefinition> <!-- Navigation bar row -->
    </Grid.RowDefinitions>
    <!-- Navigation bar -->
    <Grid Name="UINavbar" Grid.Row="1">
      <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
        <Button Name="UIPrevPage" Click="PrevPage_Click" IsEnabled="{ Binding PrevPageIsEnabled }" Content="&lt;"/>
        <Label Content="PAGE"/>
        <Button Name="UINextPage" Click="NextPage_Click" IsEnabled="{ Binding NextPageIsEnabled }" Content="&gt;"/>
        <Button Name="UIPrevAction" Click="PrevAction_Click" IsEnabled="{ Binding PrevActionIsEnabled }" Content="&lt;"/>
        <Label Content="ACTION"/>
        <Button Name="UINextAction" Click="NextAction_Click" IsEnabled="{ Binding NextActionIsEnabled }" Content="&gt;"/>
      </StackPanel>
    </Grid>
    <!-- Main grid for content pane -->
    <Grid Name="UIContentPane">
      <!-- Landing page -->
      <Grid Name="UILandingPage" Visibility="Visible">
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
          <TextBlock Margin="10" FontSize="24" HorizontalAlignment="Center">
            ChaCha Visualization
          </TextBlock>
          <TextBlock HorizontalAlignment="Center">
            A stream cipher used in TLS by Daniel J. Bernstein
          </TextBlock>
        </StackPanel>
      </Grid>
      <!-- ChaCha workflow page -->
      <Grid Margin="20" Name="UIWorkflowPage" Visibility="Collapsed">
        <!-- Grid for title and content -->
        <Grid.RowDefinitions>
          <RowDefinition Height="50" /> <!-- Title row -->
          <RowDefinition /> <!-- Content row -->
        </Grid.RowDefinitions>
        <!-- Title -->
        <TextBlock Grid.Row="0" HorizontalAlignment="Center" FontSize="20">ChaCha workflow</TextBlock>
        <!-- Grid for content -->
        <Grid Grid.Row="1">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/> <!-- Steps + description column -->
            <ColumnDefinition Width="3*"/> <!-- Input params column -->
          </Grid.ColumnDefinitions>
          <!-- Steps + description -->
          <Grid Grid.Column="0">
            <Grid.RowDefinitions>
              <RowDefinition></RowDefinition>
              <RowDefinition Height="6*"></RowDefinition>
            </Grid.RowDefinitions>
            <!-- Description -->
            <StackPanel Grid.Row="0">
              <TextBlock>Since ChaCha is a stream cipher, it encrypts messages by XOR'ing them with its keystream. The keystream depends on the key and initialization vector as we will see.</TextBlock>
              <TextBlock>The keystream is generated by concatenating keystream blocks. To be able to XOR the whole message with the keystream, the keystream length must be equal or larger than the input length.</TextBlock>
            </StackPanel>
            <!-- Steps -->
            <Grid  Grid.Row="1">
              <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
              </Grid.RowDefinitions>
              <StackPanel Grid.Row="0">
                <TextBlock>This leads us to following steps:</TextBlock>
              </StackPanel>
              <StackPanel Margin="30,0,0,0" Grid.Row="1">
                <TextBlock>1. Generate keystream blocks</TextBlock>
              </StackPanel>
              <StackPanel Margin="30,0,0,0"  Grid.Row="2">
                <TextBlock>2. Chain keystream blocks</TextBlock>
              </StackPanel>
              <StackPanel Margin="30,0,0,0" Grid.Row="3">
                <TextBlock>3. XOR input with keystream</TextBlock>
              </StackPanel>
            </Grid>
          </Grid>
        </Grid>
      </Grid>
      <!-- ChaCha State matrix page -->
      <Grid Margin="20" Name="UIStateMatrixPage" Visibility="Collapsed">
        <!-- Grid for title and content -->
        <Grid.RowDefinitions>
          <RowDefinition Height="50" /> <!-- Title row -->
          <RowDefinition /> <!-- Content row -->
        </Grid.RowDefinitions>
        <!-- Title -->
        <TextBlock Grid.Row="0" HorizontalAlignment="Center" FontSize="20">State matrix</TextBlock>
        <!-- Grid for content -->
        <Grid Grid.Row="1">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/> <!-- state matrix + transformation steps column -->
            <ColumnDefinition Width="3*"/> <!-- Input params column -->
          </Grid.ColumnDefinitions>
          <!-- state matrix + transformation steps -->
          <Grid Grid.Column="0">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition></RowDefinition> <!-- state matrix row -->
                <RowDefinition></RowDefinition> <!-- little-endian transformation step row -->
              </Grid.RowDefinitions>
              <!-- State matrix -->
              <Grid Grid.Row="0">
                <Border BorderBrush="Black" BorderThickness="0,1,1,0">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition></ColumnDefinition>
                      <ColumnDefinition></ColumnDefinition>
                      <ColumnDefinition></ColumnDefinition>
                      <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition></RowDefinition>
                      <RowDefinition></RowDefinition>
                      <RowDefinition></RowDefinition>
                      <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <!-- Row 0 -->
                    <Border Grid.Row="0" Grid.Column="0" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState0"/>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="1" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState1"/>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="2" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState2"/>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="3" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState3"/>
                    </Border>
                    <!-- Row 1 -->
                    <Border Grid.Row="1" Grid.Column="0" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState4"/>
                    </Border>
                    <Border Grid.Row="1" Grid.Column="1" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState5"/>
                    </Border>
                    <Border Grid.Row="1" Grid.Column="2" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState6"/>
                    </Border>
                    <Border Grid.Row="1" Grid.Column="3" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState7"/>
                    </Border>
                    <!-- Row 2 -->
                    <Border Grid.Row="2" Grid.Column="0" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState8"/>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="1" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState9"/>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="2" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState10"/>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="3" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState11"/>
                    </Border>
                    <!-- Row 3 -->
                    <Border Grid.Row="3" Grid.Column="0" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState12"/>
                    </Border>
                    <Border Grid.Row="3" Grid.Column="1" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState13"/>
                    </Border>
                    <Border Grid.Row="3" Grid.Column="2" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState14"/>
                    </Border>
                    <Border Grid.Row="3" Grid.Column="3" BorderBrush="Black" BorderThickness="1,0,0,1">
                      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Name="UIState15"/>
                    </Border>
                  </Grid>
                </Border>
              </Grid>
              <!-- little-endian transformation -->
              <Grid Margin="10" Grid.Row="1">
                <Grid.RowDefinitions>
                  <RowDefinition></RowDefinition>
                  <RowDefinition></RowDefinition>
                  <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition></ColumnDefinition>
                  <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0">
                  Input:
                </TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="1" Name="UITransformInput"/>
                <TextBlock Grid.Row="1" Grid.Column="0">
                  Split into 4 byte chunks:
                </TextBlock>
                <TextBlock Grid.Row="1" Grid.Column="1" Name="UITransformChunks"/>
                <TextBlock Grid.Row="2" Grid.Column="0">
                  Transform each chunk into <LineBreak/> little-endian:
                </TextBlock>
                <TextBlock Grid.Row="2" Grid.Column="1" Name="UITransformLittleEndian"/>
              </Grid>
            </Grid>
          </Grid>
          <!-- Step description + Input parameter -->
          <Grid Margin="100,0,0,0" Grid.Column="1">
            <Grid.RowDefinitions>
              <RowDefinition Height="14*"></RowDefinition>
              <RowDefinition Height="2*"></RowDefinition>
              <RowDefinition Height="4*"></RowDefinition>
              <RowDefinition Height="4*"></RowDefinition>
              <RowDefinition Height="4*"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Name="UIStateMatrixStepDescription"/>
            <Label Grid.Row="1" HorizontalAlignment="Center">State Parameters</Label>
            <StackPanel Grid.Row="2" Orientation="Horizontal">
              <Label>Constant:</Label>
              <Label Content="{ Binding HexConstants }" Name="UIConstant"/>
            </StackPanel>
            <StackPanel Grid.Row="3" Orientation="Horizontal">
              <Label>Key:</Label>
              <Label Content="{ Binding HexInputKey }" Name="UIInputKey"/>
            </StackPanel>
            <StackPanel Grid.Row="4" Orientation="Horizontal">
              <Label>Initialization vector (IV):</Label>
              <Label Content="{ Binding HexInputIV }" Name="UIInputIV"/>
            </StackPanel>
          </Grid>
        </Grid>
      </Grid>
    </Grid>
  </Grid>
</UserControl>