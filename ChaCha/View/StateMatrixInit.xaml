<UserControl x:Class="Cryptool.Plugins.ChaCha.View.StateMatrixInit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:conv="clr-namespace:Cryptool.Plugins.ChaCha.Helper.Converter"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Styles\Index.xaml" />
                <ResourceDictionary Source="..\ContentTemplate\PageContentTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="FalseToCollapsed" />
            <conv:BitsToBytes x:Key="BitsToBytes" />
            <conv:BytesToHex x:Key="ToHex" />
            <conv:UInt32ToHex x:Key="UInt32ToHex" />
            <conv:BigIntegerToHexWithVersion x:Key="ToHexWithVersion" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
            <conv:BooleanAndVisibility x:Key="BooleanAndVisibility" />
            <conv:KeyLengthToWidth x:Key="KeyLengthToWidth" />
            <conv:KeyLengthToChunkedWidth x:Key="KeyLengthToChunkedWidth" />
        </ResourceDictionary>
    </UserControl.Resources>
    <ContentControl Template="{StaticResource PageContentTemplate}" Name="Root">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50*" />
                <RowDefinition Height="50*" />
                <RowDefinition Height="8*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <!--#region  State Matrix -->

            <Border Style="{StaticResource MatrixBorder}" Grid.Row="0" Grid.Column="0">
                <Grid Grid.Row="0" Grid.Column="0" Name="StateMatrix">
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StateText}" />
                        <Style TargetType="{x:Type Viewbox}" BasedOn="{StaticResource StateViewbox}" />
                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}" />
                        <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource DiffusionState}" />
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="0" Grid.Column="0" Background="Bisque">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[0], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding ConstantsMatrix, Converter={StaticResource BooleanToVisibility}}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="1" Background="Bisque">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[1], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding ConstantsMatrix, Converter={StaticResource BooleanToVisibility}}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="2" Background="Bisque">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[2], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding ConstantsMatrix, Converter={StaticResource BooleanToVisibility}}" />
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="0" Grid.Column="3" Background="Bisque">
                        <Viewbox>
                            <TextBox Text="{Binding StateMatrixValues[3], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding ConstantsMatrix, Converter={StaticResource BooleanToVisibility}}" />
                        </Viewbox>
                    </Border>

                    <Border Grid.Row="1" Grid.Column="0" Background="LightCoral">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[4], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState4">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="KeyMatrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState4" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="1" Grid.Column="1" Background="LightCoral">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[5], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState5">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="KeyMatrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState5" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="1" Grid.Column="2" Background="LightCoral">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[6], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState6">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="KeyMatrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState6" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="1" Grid.Column="3" Background="LightCoral">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[7], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState7">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="KeyMatrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState7" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>

                    <Border Grid.Row="2" Grid.Column="0" Background="LightCoral">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[8], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState8">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="KeyMatrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState8" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="1" Background="LightCoral">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[9], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState9">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="KeyMatrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState9" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="2" Background="LightCoral">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[10], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState10">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="KeyMatrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState10" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="2" Grid.Column="3" Background="LightCoral">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[11], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState11">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="KeyMatrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState11" Visibility="{Binding KeyMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>

                    <Border Grid.Row="3" Grid.Column="0" Background="SkyBlue">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[12], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding CounterMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState12">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="CounterMatrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState12" Visibility="{Binding CounterMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="3" Grid.Column="1" Name="State13">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[13], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding State13Matrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState13">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="State13Matrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState13" Visibility="{Binding State13Matrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="3" Grid.Column="2" Background="PaleGreen">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[14], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding IVMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState14">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="IVMatrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState14" Visibility="{Binding IVMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>
                    <Border Grid.Row="3" Grid.Column="3" Background="PaleGreen">
                        <Viewbox>
                            <StackPanel>
                                <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                    <TextBox Text="{Binding StateMatrixValues[15], Converter={StaticResource UInt32ToHex}}" Visibility="{Binding IVMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                    <RichTextBox Name="DiffusionState15">
                                        <RichTextBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BooleanAndVisibility}" Mode="OneWay">
                                                <Binding Path="IVMatrix" />
                                                <Binding Path="DiffusionActive" />
                                            </MultiBinding>
                                        </RichTextBox.Visibility>
                                    </RichTextBox>
                                </StackPanel>
                                <StackPanel Style="{StaticResource DiffusionXOR}">
                                    <RichTextBox Name="XORState15" Visibility="{Binding IVMatrix, Converter={StaticResource BooleanToVisibility}}" />
                                </StackPanel>
                            </StackPanel>
                        </Viewbox>
                    </Border>
                </Grid>
            </Border>

            <!--#endregion-->

            <!--#region  Description -->

            <Grid Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Name="DescriptionRoot">
                <Viewbox Style="{StaticResource UniformViewbox}">
                    <Viewbox.Resources>
                        <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource RichText}">
                            <Setter Property="Margin" Value="3" />
                            <Setter Property="Width" Value="{Binding ElementName=DescriptionRoot, Path=ActualWidth}" />
                        </Style>
                    </Viewbox.Resources>
                    <StackPanel Orientation="Vertical">
                        <RichTextBox>
                            <FlowDocument>
                                <Paragraph>
                                    The 512-bit (128-byte) ChaCha state can be interpreted as a 4x4 matrix, where each entry consists of 4 bytes. The state entries consist of the parameters you can see below. They will be encoded before insertion into the state matrix.
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <RichTextBox Visibility="{Binding Description[0], Converter={StaticResource FalseToCollapsed}}">
                            <FlowDocument>
                                <Paragraph>
                                    The first 16 bytes consist of the
                                    <Run Background="Bisque">constants</Run> .
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <RichTextBox Visibility="{Binding Description[1], Converter={StaticResource FalseToCollapsed}}">
                            <FlowDocument>
                                <Paragraph>
                                    The next 32 bytes consist of the
                                    <Run Background="LightCoral">key</Run> . If the key consists of only 16 bytes, it is concatenated with itself.
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <RichTextBox Visibility="{Binding Description[2], Converter={StaticResource FalseToCollapsed}}">
                            <FlowDocument>
                                <Paragraph>
                                    The next
                                    <Run Text="{Binding Settings.Version.CounterBits, Converter={StaticResource BitsToBytes}, Mode=OneWay}" /> bytes consist of the
                                    <Run Background="SkyBlue">counter</Run> . The counter is special since we first reverse all bytes. This is so because all other parameters are assumed to be already in little-endian thus no reversing needed.
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <RichTextBox Visibility="{Binding Description[3], Converter={StaticResource FalseToCollapsed}}">
                            <FlowDocument>
                                <Paragraph>
                                    The next
                                    <Run Text="{Binding Settings.Version.IVBits, Converter={StaticResource BitsToBytes}, Mode=OneWay}" /> bytes consist of the
                                    <Run Background="PaleGreen">IV</Run> .
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <RichTextBox Visibility="{Binding Description[4], Converter={StaticResource FalseToCollapsed}}">
                            <FlowDocument>
                                <Paragraph>
                                    On the next page we will pass this initialized state matrix to the ChaCha hash function to generate our first keystream block.
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </StackPanel>
                </Viewbox>
            </Grid>

            <!--#endregion-->

            <!--#region  State parameters -->

            <Viewbox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource Text}">
                            <Setter Property="Margin" Value="0,5,0,5" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Margin" Value="0,5,0,5" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Row="0" Grid.Column="0" Text="State parameters" Margin="25" />
                    <TextBox Grid.Row="1" Grid.Column="0" Text="Constants" Background="Bisque" />
                    <TextBox Grid.Row="2" Grid.Column="0" Text="Key" Background="LightCoral" />
                    <TextBox Grid.Row="3" Grid.Column="0" Text="Initialization vector" Background="PaleGreen" />
                    <TextBox Grid.Row="4" Grid.Column="0" Text="Initial counter" Background="SkyBlue" />

                    <StackPanel Grid.Row="1" Grid.Column="1">
                        <RichTextBox Width="395" Style="{StaticResource RichHex}">
                            <FlowDocument>
                                <Paragraph>
                                    <TextBlock Text="{Binding ASCIIConstants, Mode=OneWay}" />
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Grid.Column="1">
                        <StackPanel Style="{StaticResource DiffusionNonXOR}">
                            <RichTextBox Width="{Binding ChaCha.InputKey.Length, Converter={StaticResource KeyLengthToWidth}}" Style="{StaticResource RichHex}">
                                <FlowDocument>
                                    <Paragraph>
                                        <TextBlock Text="{Binding ChaCha.InputKey, Converter={StaticResource ToHex}, Mode=OneWay}" />
                                    </Paragraph>
                                </FlowDocument>
                            </RichTextBox>
                            <RichTextBox Width="{Binding ChaCha.InputKey.Length, Converter={StaticResource KeyLengthToWidth}}" Style="{StaticResource RichHex}" Name="DiffusionInputKey" Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>
                        <StackPanel Style="{StaticResource DiffusionXOR}">
                            <RichTextBox Width="{Binding ChaCha.InputKey.Length, Converter={StaticResource KeyLengthToWidth}}" Style="{StaticResource RichHex}" Name="DiffusionInputKeyXOR" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Grid.Row="3" Grid.Column="1">
                        <StackPanel Style="{StaticResource DiffusionNonXOR}">
                            <RichTextBox Width="395" Style="{StaticResource RichHex}">
                                <FlowDocument>
                                    <Paragraph>
                                        <TextBlock Text="{Binding ChaCha.InputIV, Converter={StaticResource ToHex}, Mode=OneWay}" />
                                    </Paragraph>
                                </FlowDocument>
                            </RichTextBox>
                            <RichTextBox Width="395" Style="{StaticResource RichHex}" Name="DiffusionInputIV" Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>
                        <StackPanel Style="{StaticResource DiffusionXOR}">
                            <RichTextBox Width="395" Style="{StaticResource RichHex}" Name="DiffusionInputIVXOR" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Grid.Row="4" Grid.Column="1">
                        <StackPanel Style="{StaticResource DiffusionNonXOR}">
                            <RichTextBox Width="395" Style="{StaticResource RichHex}">
                                <FlowDocument>
                                    <Paragraph>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource ToHexWithVersion}" Mode="OneWay">
                                                    <Binding Path="ChaCha.InitialCounter" />
                                                    <Binding Path="ChaCha.Settings" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Paragraph>
                                </FlowDocument>
                            </RichTextBox>
                            <RichTextBox Width="395" Style="{StaticResource RichHex}" Name="DiffusionInitialCounter"  Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>
                        <StackPanel Style="{StaticResource DiffusionXOR}">
                            <RichTextBox Width="395" Style="{StaticResource RichHex}" Name="DiffusionInitialCounterXOR" />
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Viewbox>

            <!--#endregion-->

            <!--#region Encoding -->

            <Grid Grid.Row="1" Grid.Column="0" Margin="0,5,5,5">
                <Grid.Resources>
                    <Style TargetType="{x:Type TextBox}" x:Key="Title" BasedOn="{StaticResource Text}">
                        <Setter Property="Margin" Value="10" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="FontSize" Value="22" />
                    </Style>
                    <Style TargetType="{x:Type TextBox}" x:Key="Description" BasedOn="{StaticResource Text}">
                        <Setter Property="Margin" Value="10" />
                    </Style>
                    <Style TargetType="{x:Type TextBox}" x:Key="Value" BasedOn="{StaticResource Hex}">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="Margin" Value="10" />
                    </Style>
                    <Style TargetType="{x:Type TextBox}" x:Key="PanelValue" BasedOn="{StaticResource Hex}">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="Margin" Value="0" />
                    </Style>
                    <Style TargetType="{x:Type StackPanel}" x:Key="ValuePanel">
                        <Setter Property="Margin" Value="10" />
                    </Style>
                </Grid.Resources>

                <!--#region Constants encoding -->

                <Viewbox>
                    <Grid Visibility="{Binding ConstantsEncoding, Converter={StaticResource BooleanToVisibility}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource Title}" Text="Constants encoding" />
                        <TextBox Grid.Row="1" Grid.Column="0" Style="{StaticResource Description}" Text="Original value (ASCII):" />
                        <TextBox Grid.Row="2" Grid.Column="0" Style="{StaticResource Description}" Text="As bytes:" />
                        <TextBox Grid.Row="3" Grid.Column="0" Style="{StaticResource Description}" Text="Split into 4 byte chunks:" />
                        <TextBox Grid.Row="4" Grid.Column="0" Style="{StaticResource Description}" Text="Reverse byte order of each chunk:" />

                        <TextBox Grid.Row="1" Grid.Column="1"
                                 Style="{StaticResource Value}"
                                 Text="{Binding ASCIIConstants, Mode=OneWay }"
                                 Visibility="{Binding ConstantsEncodingInput, Converter={StaticResource BooleanToVisibility}}" />
                        <TextBox Grid.Row="2" Grid.Column="1"
                                 Style="{StaticResource Value}"
                                 Visibility="{Binding ConstantsEncodingASCII, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox.Text>
                                <Binding Path="ASCIIConstants" Mode="OneWay">
                                    <Binding.Converter>
                                        <conv:SequentialValueConverter>
                                            <conv:ASCII />
                                            <conv:BytesToHex />
                                        </conv:SequentialValueConverter>
                                    </Binding.Converter>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox Grid.Row="3" Grid.Column="1"
                                 Style="{StaticResource Value}"
                                 Visibility="{Binding ConstantsEncodingChunkify, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox.Text>
                                <Binding Path="ASCIIConstants" Mode="OneWay">
                                    <Binding.Converter>
                                        <conv:SequentialValueConverter>
                                            <conv:ASCII />
                                            <conv:BytesToHex />
                                            <conv:Chunkify />
                                        </conv:SequentialValueConverter>
                                    </Binding.Converter>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox Grid.Row="4" Grid.Column="1"
                                 Style="{StaticResource Value}"
                                 Visibility="{Binding ConstantsEncodingLittleEndian, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox.Text>
                                <Binding Path="ASCIIConstants" Mode="OneWay">
                                    <Binding.Converter>
                                        <conv:SequentialValueConverter>
                                            <conv:ASCII />
                                            <conv:LittleEndian />
                                            <conv:BytesToHex />
                                            <conv:Chunkify />
                                        </conv:SequentialValueConverter>
                                    </Binding.Converter>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </Grid>
                </Viewbox>
                <!--#endregion-->

                <!--#region  Key encoding -->

                <Viewbox>
                    <Grid Visibility="{Binding KeyEncoding, Converter={StaticResource BooleanToVisibility}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource Title}" Text="Key encoding" />
                        <TextBox Grid.Row="1" Grid.Column="0" Style="{StaticResource Description}" Text="Original value:" />
                        <TextBox Grid.Row="2" Grid.Column="0" Style="{StaticResource Description}" Text="Split into 4 byte chunks:" />
                        <TextBox Grid.Row="3" Grid.Column="0" Style="{StaticResource Description}" Text="Reverse byte order of each chunk:" />

                        <StackPanel Style="{StaticResource ValuePanel}" Grid.Row="1" Grid.Column="1" Visibility="{Binding KeyEncodingInput, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox Name="TextBox_KeyEncodingInput"
                                     Style="{StaticResource PanelValue}"
                                     Text="{Binding ChaCha.InputKey, Converter={StaticResource ToHex}, Mode=OneWay }" />
                            <RichTextBox
                                Width="{Binding ChaCha.InputKey.Length, Converter={StaticResource KeyLengthToWidth}}"
                                Style="{StaticResource RichHex}"
                                Name="DiffusionKeyEncodingInput"
                                Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>

                        <StackPanel Style="{StaticResource ValuePanel}" Grid.Row="2" Grid.Column="1" Visibility="{Binding KeyEncodingChunkify, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox Style="{StaticResource PanelValue}">
                                <TextBox.Text>
                                    <Binding Path="ChaCha.InputKey" Mode="OneWay">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:BytesToHex />
                                                <conv:Chunkify />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <RichTextBox
                                Width="{Binding ChaCha.InputKey.Length, Converter={StaticResource KeyLengthToChunkedWidth}}"
                                Style="{StaticResource RichHex}"
                                Name="DiffusionKeyEncodingChunkify"
                                Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}">
                            </RichTextBox>
                        </StackPanel>

                        <StackPanel Style="{StaticResource ValuePanel}" Grid.Row="3" Grid.Column="1" Visibility="{Binding KeyEncodingLittleEndian, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox Style="{StaticResource PanelValue}">
                                <TextBox.Text>
                                    <Binding Path="ChaCha.InputKey" Mode="OneWay">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:LittleEndian />
                                                <conv:BytesToHex />
                                                <conv:Chunkify />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <RichTextBox
                                Width="{Binding ChaCha.InputKey.Length, Converter={StaticResource KeyLengthToChunkedWidth}}"
                                Style="{StaticResource RichHex}"
                                Name="DiffusionKeyEncodingLittleEndian"
                                Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>
                    </Grid>
                </Viewbox>

                <!--#endregion-->

                <!--#region Counter encoding -->

                <Viewbox>
                    <Grid Visibility="{Binding CounterEncoding, Converter={StaticResource BooleanToVisibility}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource Title}" Text="Counter encoding" />
                        <TextBox Grid.Row="1" Grid.Column="0" Style="{StaticResource Description}" Text="Original value:" />
                        <TextBox Grid.Row="2" Grid.Column="0" Style="{StaticResource Description}" Text="Reverse all bytes:" />
                        <TextBox Grid.Row="3" Grid.Column="0" Style="{StaticResource Description}" Text="Split into 4 byte chunks:" />
                        <TextBox Grid.Row="4" Grid.Column="0" Style="{StaticResource Description}" Text="Reverse byte order of each chunk:" />

                        <StackPanel Style="{StaticResource ValuePanel}" Grid.Row="1" Grid.Column="1"
                                    Visibility="{Binding CounterEncodingInput, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox Style="{StaticResource PanelValue}">
                                <TextBox.Text>
                                    <MultiBinding Converter="{StaticResource ToHexWithVersion}" Mode="OneWay">
                                        <Binding Path="ChaCha.InitialCounter" />
                                        <Binding Path="ChaCha.Settings" />
                                    </MultiBinding>
                                </TextBox.Text>
                            </TextBox>
                            <RichTextBox Width="203" Style="{StaticResource RichHex}" Name="DiffusionCounterEncodingInput"  Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>

                        <StackPanel Style="{StaticResource ValuePanel}" Grid.Row="2" Grid.Column="1"
                                    Visibility="{Binding CounterEncodingReverse, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox Style="{StaticResource PanelValue}">
                                <TextBox.Text>
                                    <MultiBinding Mode="OneWay">
                                        <Binding Path="ChaCha.InitialCounter" />
                                        <Binding Path="ChaCha.Settings" />
                                        <MultiBinding.Converter>
                                            <conv:MultiSequentialValueConverter MultiValueConverter="{StaticResource ToHexWithVersion}">
                                                <conv:HexToBytes />
                                                <conv:ReverseBytes />
                                                <conv:BytesToHex />
                                            </conv:MultiSequentialValueConverter>
                                        </MultiBinding.Converter>
                                    </MultiBinding>
                                </TextBox.Text>
                            </TextBox>
                            <RichTextBox Width="203" Style="{StaticResource RichHex}" Name="DiffusionCounterEncodingReverse"  Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>

                        <StackPanel Style="{StaticResource ValuePanel}" Grid.Row="3" Grid.Column="1"
                                    Visibility="{Binding CounterEncodingChunkify, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox Style="{StaticResource PanelValue}">
                                <TextBox.Text>
                                    <MultiBinding Mode="OneWay">
                                        <Binding Path="ChaCha.InitialCounter" />
                                        <Binding Path="ChaCha.Settings" />
                                        <MultiBinding.Converter>
                                            <conv:MultiSequentialValueConverter MultiValueConverter="{StaticResource ToHexWithVersion}">
                                                <conv:HexToBytes />
                                                <conv:ReverseBytes />
                                                <conv:BytesToHex />
                                                <conv:Chunkify />
                                            </conv:MultiSequentialValueConverter>
                                        </MultiBinding.Converter>
                                    </MultiBinding>
                                </TextBox.Text>
                            </TextBox>
                            <RichTextBox Width="227" Style="{StaticResource RichHex}" Name="DiffusionCounterEncodingChunkify"  Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>

                        <StackPanel Style="{StaticResource ValuePanel}" Grid.Row="4" Grid.Column="1"
                                    Visibility="{Binding CounterEncodingLittleEndian, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox Style="{StaticResource PanelValue}">
                                <TextBox.Text>
                                    <MultiBinding Mode="OneWay">
                                        <Binding Path="ChaCha.InitialCounter" />
                                        <Binding Path="ChaCha.Settings" />
                                        <MultiBinding.Converter>
                                            <conv:MultiSequentialValueConverter MultiValueConverter="{StaticResource ToHexWithVersion}">
                                                <conv:HexToBytes />
                                                <conv:ReverseBytes />
                                                <conv:LittleEndian />
                                                <conv:BytesToHex />
                                                <conv:Chunkify />
                                            </conv:MultiSequentialValueConverter>
                                        </MultiBinding.Converter>
                                    </MultiBinding>
                                </TextBox.Text>
                            </TextBox>
                            <RichTextBox Width="227" Style="{StaticResource RichHex}" Name="DiffusionCounterEncodingLittleEndian"  Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>
                    </Grid>
                </Viewbox>

                <!--#endregion-->

                <!--#region IV encoding -->

                <Viewbox>
                    <Grid Visibility="{Binding IVEncoding, Converter={StaticResource BooleanToVisibility}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource Title}" Text="IV encoding" />
                        <TextBox Grid.Row="1" Grid.Column="0" Style="{StaticResource Description}" Text="Original value:" />
                        <TextBox Grid.Row="2" Grid.Column="0" Style="{StaticResource Description}" Text="Split into 4 byte chunks:" />
                        <TextBox Grid.Row="3" Grid.Column="0" Style="{StaticResource Description}" Text="Reverse byte order of each chunk:" />

                        <StackPanel Style="{StaticResource ValuePanel}" Grid.Row="1" Grid.Column="1"
                                    Visibility="{Binding IVEncodingInput, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox Style="{StaticResource PanelValue}"
                                     Text="{Binding ChaCha.InputIV, Converter={StaticResource ToHex}, Mode=OneWay}" />
                            <RichTextBox Width="203" Style="{StaticResource RichHex}" Name="DiffusionIVEncodingInput"  Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>

                        <StackPanel Style="{StaticResource ValuePanel}" Grid.Row="2" Grid.Column="1"
                                    Visibility="{Binding IVEncodingChunkify, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox Style="{StaticResource PanelValue}">
                                <TextBox.Text>
                                    <Binding Path="ChaCha.InputIV" Mode="OneWay">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:BytesToHex />
                                                <conv:Chunkify />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <RichTextBox Width="227" Style="{StaticResource RichHex}" Name="DiffusionIVEncodingChunkify"  Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>

                        <StackPanel Style="{StaticResource ValuePanel}" Grid.Row="3" Grid.Column="1"
                                    Visibility="{Binding IVEncodingLittleEndian, Converter={StaticResource BooleanToVisibility}}">
                            <TextBox Style="{StaticResource PanelValue}">
                                <TextBox.Text>
                                    <Binding Path="ChaCha.InputIV" Mode="OneWay">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:LittleEndian />
                                                <conv:BytesToHex />
                                                <conv:Chunkify />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <RichTextBox Width="227" Style="{StaticResource RichHex}" Name="DiffusionIVEncodingLittleEndian"  Visibility="{Binding DiffusionActive, Converter={StaticResource BooleanToVisibility}}" />
                        </StackPanel>
                    </Grid>
                </Viewbox>

                <!--#endregion-->
            </Grid>
        </Grid>
    </ContentControl>
</UserControl>